
CREATE TABLE IF NOT EXISTS `toc0101` (
  `questionNo` int(11) NOT NULL DEFAULT '0',
  `question` mediumtext,
  `optionA` varchar(1000) DEFAULT NULL,
  `optionB` varchar(1000) DEFAULT NULL,
  `optionC` varchar(1000) DEFAULT NULL,
  `optionD` varchar(1000) DEFAULT NULL,
  `answer` varchar(10) NOT NULL,
  `marks` int(11) NOT NULL,
  `isNumerical` int(11) DEFAULT NULL,
  `isImage` int(11) DEFAULT NULL,
  `imagePath` varchar(1000) DEFAULT NULL,
  `solution` mediumtext NOT NULL,
  PRIMARY KEY (`questionNo`)
);


INSERT INTO `toc0101` (`questionNo`, `question`, `optionA`, `optionB`, `optionC`, `optionD`, `answer`, `marks`, `isNumerical`, `isImage`, `imagePath`, `solution`) VALUES
(1, 'Consider the languages L1 = <img src="http://d18khu5s3lkxd9.cloudfront.net//wp-content/ql-cache/quicklatex.com-5b2be26c0c1341f54b29baddda771346_l3.svg" class="ql-img-inline-formula quicklatex-auto-format" alt="phi" title="Rendered by QuickLaTeX.com" height="17" width="11" style="vertical-align: -4px;"> and L2 = {a}. Which one of the following represents L1 L2<sup>*</sup> U L1<sup>*</sup>\r\n<pre><a href="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2013/10/gatecs20135.png"><img src="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2013/10/gatecs20135.png" alt="gatecs20135" width="500" height="30" class="alignnone size-full wp-image-4304"></a></pre>', 'A', 'B', 'C', 'D', 'A', 2, 0, 0, 'none', '<div class="mtq_explanation-label">Question 1 Explanation:&nbsp;</div><div class="mtq_explanation-text"> L1 L2* U L1*\r\n\r\nResult of L1 L2* is [Tex]phi[/Tex].\r\n\r\n{[Tex]phi[/Tex]} indicates an empty language. Concatenation of [Tex]phi[/Tex] with any other language is [Tex]phi[/Tex].   It works as 0 in multiplication. \r\n\r\nL1* = [Tex]phi[/Tex]* which is {[Tex]epsilon[/Tex]}.\r\n\r\nUnion of  [Tex]phi[/Tex] and {[Tex]epsilon[/Tex]} is {[Tex]epsilon[/Tex]}</div>'),
(2, 'Consider the DFA given.\r\n\r\n<a href="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2013/10/gatecs201313.png"><img src="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2013/10/gatecs201313.png" alt="gatecs201313" width="324" height="289" class="alignnone size-full wp-image-4344"></a>\r\n\r\nWhich of the following are FALSE? <pre>1. Complement of L(A) is context-free.\r\n2. L(A) = L((11*0+0)(0 + 1)*0*1*)\r\n3. For the language accepted by A, A is the minimal DFA.\r\n4. A accepts all strings over {0, 1} of length at least 2. </pre>\r\n', '1 and 3 only', '2 and 4 only', '2 and 3 only', '3 and 4 only', 'D', 1, 0, 0, 'none', '<div class="mtq_explanation-label">Question 2 Explanation:&nbsp;</div><div class="mtq_explanation-text"> 1 is true.  L(A) is regular, its complement would also be regular.  A regular language is also context free.\r\n\r\n2 is true.\r\n\r\n3 is false, the DFA can be minimized to two states.  Where the second state is final state and we reach second state after a 0. \r\n\r\n4 is clearly false as the DFA accepts a single 0.</div>'),
(3, 'W hat is the complement of the language accepted by the NFA shown below?\r\n\r\n<a href="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2013/11/gatecs2012automata.png"><img src="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2013/11/gatecs2012automata.png" alt="gatecs2012automata" width="417" height="115" class="alignnone size-full wp-image-4865"></a>', 'A', 'B', 'C', 'D', 'B', 2, 0, 0, 'none', '<div class="mtq_explanation-label">Question 3 Explanation:&nbsp;</div><div class="mtq_explanation-text"> The given alphabet contains only one symbol {a} and the given NFA accepts all strings with any number of occurrences of ‘a’. In other words, the NFA accepts a+. Therefore complement of the language accepted by automata is empty string.</div>'),
(4, 'Given the language L = {ab, aa, baa}, which of the following strings are in L*? <pre>1) abaabaaabaa\r\n2) aaaabaaaa\r\n3) baaaaabaaaab\r\n4) baaaaabaa </pre>\r\n', '1, 2 and 3', '2, 3 and 4', '1, 2 and 4', ' 1, 3 and 4', 'C', 1, 0, 0, 'none', '<div class="mtq_explanation-label">Question 4 Explanation:&nbsp;</div><div class="mtq_explanation-text"> See question 2 of&nbsp;<a href="http://www.geeksforgeeks.org/automata-theory-set-2/">http://www.geeksforgeeks.org/automata-theory-set-2/</a></div>'),
(5, 'Consider the set of strings on {0,1} in which, every substring of 3 symbols has at most two zeros. For example, 001110 and 011001 are in the language, but 100010 is not. All strings of length less than 3 are also in the language. A partially completed DFA that accepts this language is shown below.\r\n\r\n<img src="http://www.geeksforgeeks.org/wp-content/uploads/2012AT2.png" width="529" height="318" class="alignnone">\r\n\r\nThe missing arcs in the DFA are\r\n\r\n<img src="http://www.geeksforgeeks.org/wp-content/uploads/2012AT4.png" width="621" height="278" class="alignnone">', 'A', 'B', 'C', 'D', 'D', 2, 0, 0, 'none', '<div class="mtq_explanation-label">Question 5 Explanation:&nbsp;</div><div class="mtq_explanation-text"> See&nbsp;<a href="http://www.geeksforgeeks.org/automata-theory-set-2/">http://www.geeksforgeeks.org/automata-theory-set-2/</a></div>'),
(6, 'Definition of a language L with alphabet {<em>a</em>} is given as following.<pre>             L={<a href="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2013/12/gate2011Q42.png"><img src="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2013/12/gate2011Q42.png" alt="gate2011Q42" width="32" height="21" class="alignnone size-full wp-image-5398"></a>| k&gt;0, and n is a positive integer constant}</pre>\r\n\r\nWhat is the minimum number of states needed in DFA to recognize L?', 'k+1 ', ' n+1  ', ' 2^(n+1)   ', '2^(k+1)', 'B', 1, 0, 0, 'none', '<div class="mtq_explanation-label">Question 6 Explanation:&nbsp;</div><div class="mtq_explanation-text"> See Question 3 of&nbsp;<a href="http://www.geeksforgeeks.org/automata-theory-set-4/">http://www.geeksforgeeks.org/automata-theory-set-4/</a></div>'),
(7, 'A deterministic finite automation (DFA)D with alphabet&nbsp;{a,b} is given below\r\n\r\n<a href="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2013/12/GATE2011AT1.png"><img class="alignnone  wp-image-5403" alt="GATE2011AT1" src="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2013/12/GATE2011AT1.png" width="386" height="165"></a>\r\n\r\nWhich of the following finite state machines is a valid minimal DFA which accepts the same language as D?\r\n\r\n<a href="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2013/12/GATE2011AT2.png"><img class="alignnone  wp-image-5404" alt="GATE2011AT2" src="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2013/12/GATE2011AT2.png" width="562" height="167"></a>\r\n<a href="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2013/12/GATE2011AT3.png"><img class="alignnone  wp-image-5405" alt="GATE2011AT3" src="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2013/12/GATE2011AT3.png" width="578" height="178"></a>', 'A', 'B', 'C', 'D', 'A', 2, 0, 0, 'none', '<div class="mtq_explanation-label">Question 7 Explanation:&nbsp;</div><div class="mtq_explanation-text"> Options (B) and (C) are invalid because they both accept ‘b’ as a string which is not accepted by give DFA. D is invalid because it accepts bb+a which are not accepted by given DFA.</div>'),
(8, 'Let w be any string of length n is {0,1}*. Let L be the set of all substrings of w. What is the minimum number of states in a non-deterministic finite automaton that accepts L?', 'n-1', 'n', 'n+1', '2n-1', 'C', 1, 0, 0, 'none', '<div class="mtq_explanation-label">Question 8 Explanation:&nbsp;</div><div class="mtq_explanation-text"> We need minimum n+1 states to build NFA that accepts all substrings of a binary string. For example, following NFA accepts all substrings of “010? and it has 4 states.\r\n\r\n<a href="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2015/06/NFA_FOR_SUBSTRINGS-300x90.jpg"><img src="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2015/06/NFA_FOR_SUBSTRINGS-300x90.jpg" alt="NFA_FOR_SUBSTRINGS-300x90" width="300" height="90" class="alignnone size-full wp-image-16841"></a></div>'),
(9, 'Which one of the following languages over the alphabet {0,1} is described by the regular expression: (0+1)*0(0+1)*0(0+1)*?\r\n', 'The set of all strings containing the substring 00.', 'The set of all strings containing at most two 0’s.', 'The set of all strings containing at least two 0’s.', 'The set of all strings that begin and end with either 0 or 1.', 'C', 2, 0, 0, 'none', '<div class="mtq_explanation-label">Question 9 Explanation:&nbsp;</div><div class="mtq_explanation-text"> The regular expression has two 0?s surrounded by (0+1)* which means accepted strings must have at least 2 0?s.</div>'),
(10, 'Which one of the following is FALSE?\r\n', 'There is unique minimal DFA for every regular language', 'Every NFA can be converted to an equivalent PDA.', 'Complement of every context-free language is recursive.', 'Every nondeterministic PDA can be converted to an equivalent deterministic PDA.', 'D', 1, 0, 0, 'none', '<div class="mtq_explanation-label">Question 10 Explanation:&nbsp;</div><div class="mtq_explanation-text"> Deterministic PDA cannot handle languages or grammars with ambiguity, but NDPDA can handle languages with ambiguity and any context-free grammar. So every nondeterministic PDA can not be converted to an equivalent deterministic PDA.</div>'),
(11, 'Given the following state table of an FSM with two states A and B, one input and one output:\r\n\r\n<table width="90%" border="1" align="center" data-iceapw="62" data-iceapc="118">\r\n<tbody data-iceapw="62" data-iceapc="117">\r\n<tr data-iceapw="14" data-iceapc="12">\r\n<td width="12%" data-iceapw="3" data-iceapc="1">\r\n<div align="center" data-iceapw="3">Present\r\nState A</div></td>\r\n<td width="13%" data-iceapw="3" data-iceapc="1">\r\n<div align="center" data-iceapw="3">Present\r\nState B</div></td>\r\n<td width="10%" data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">Input</div></td>\r\n<td width="23%" data-iceapw="3" data-iceapc="1">\r\n<div align="center" data-iceapw="3">Next\r\nState A</div></td>\r\n<td width="22%" data-iceapw="3" data-iceapc="1">\r\n<div align="center" data-iceapw="3">Next\r\nState B</div></td>\r\n<td width="20%" data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">Output</div></td>\r\n</tr>\r\n<tr data-iceapw="6" data-iceapc="12">\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n</tr>\r\n<tr data-iceapw="6" data-iceapc="12">\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n</tr>\r\n<tr data-iceapw="6" data-iceapc="12">\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n</tr>\r\n<tr data-iceapw="6" data-iceapc="12">\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n</tr>\r\n<tr data-iceapw="6" data-iceapc="12">\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n</tr>\r\n<tr data-iceapw="6" data-iceapc="12">\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n</tr>\r\n<tr data-iceapw="6" data-iceapc="12">\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n</tr>\r\n<tr data-iceapw="6" data-iceapc="12">\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">0</div></td>\r\n<td data-iceapw="1" data-iceapc="1">\r\n<div align="center" data-iceapw="1">1</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\nIf the initial state is A=0, B=0, what is the minimum length of an input string which will take the machine to the state A=0, B=1 with Output = 1?', '3', '4', '5', '6', 'A', 2, 0, 0, 'none', '<div class="mtq_explanation-label">Question 11 Explanation:&nbsp;</div><div class="mtq_explanation-text"> (0, 0) --1--&gt; (0, 1) --0--&gt;(1, 0) --1--&gt; (0, 1) and output 1</div>'),
(12, 'Which of the following statements is false?', 'Every NFA can be converted to an equivalent DFA', 'Every non-deterministic Turing machine can be converted to an equivalent deterministic Turing machine', ' Every regular language is also a context-free language', 'Every subset of a recursively enumerable set is recursive', 'D', 1, 0, 0, 'none', 'Will be updated'),
(13, 'Given below are two finite state automata (? indicates the start state and F indicates a final state)Which of the following represents the product automaton Z×Y?\r\n\r\n<a href="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2014/02/GATECS2008491.png"><img class="alignnone  wp-image-9549" alt="GATECS200849" src="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2014/02/GATECS2008491.png" width="578" height="261"></a>', 'A', 'B', 'C', 'D', 'A', 2, 0, 0, 'none', '<div class="mtq_explanation-label">Question 13 Explanation:&nbsp;</div><div class="mtq_explanation-text"> Solution for the problem is :\r\n<br>&nbsp;<br>\r\n<a href="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2015/12/1.jpg"><img src="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2015/12/1.jpg" alt="1" width="290" height="186" class="alignnone size-full wp-image-22358"></a>\r\n<br>&nbsp;<br>\r\nThus, option (A) is correct.\r\n<br>&nbsp;<br>\r\nPlease comment below if you find anything wrong in the above post.</div>'),
(14, 'Match the following NFAs with the regular expressions they correspond to <pre> 1. ? + 0(01*1 + 00) * 01*\r\n 2. ? + 0(10 *1 + 00) * 0\r\n 3. ? + 0(10 *1 + 10) *1\r\n 4. ? + 0(10 *1 + 10) *10 *</pre>\r\n\r\n<a href="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2014/02/GATECS200853.jpg"><img src="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2014/02/GATECS200853.jpg" alt="GATECS200853" width="620" height="372" class="alignnone size-full wp-image-9552"></a>', ' P - 2, Q - 1, R - 3, S - 4 ', ' P - 1, Q - 3, R - 2, S - 4', ' P - 1, Q - 2, R - 3, S - 4', ' P - 3, Q - 2, R - 1, S - 4 ', 'C', 1, 0, 0, 'none', 'Will be updated'),
(15, 'Which of the following are regular sets? <pre><a href="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2014/02/GATECS200854.png"><img src="http://d18khu5s3lkxd9.cloudfront.net//wp-content/uploads/2014/02/GATECS200854.png" alt="GATECS200854" width="275" height="118" class="alignnone size-full wp-image-9554"></a></pre>', 'I and IV only ', 'I and III only', 'I only', 'IV only', 'A', 2, 0, 0, 'none', '<div class="mtq_explanation-label">Question 15 Explanation:&nbsp;</div><div class="mtq_explanation-text"> We can write DFA for both I and IV.</div>');



